{"version":3,"sources":["TypingAni.js","header.js","aboutme.js","links.js","projects.js","serviceWorker.js","index.js"],"names":["TypingAni","props","loop","speed","className","format","content","Delay","ms","Backspace","count","useStyles","makeStyles","root","backgroundColor","header","paddingTop","paddingBottom","name","color","margin","textAlign","fontFamily","fontStyle","fontWeight","fontSize","letterSpacing","subtitle","Header","classes","theme","pad","justifyContent","alignItems","title","p","lineHeight","img","position","maxWidth","br","AboutMe","Container","Grid","container","spacing","item","xs","sm","src","alt","gridCentered","link","Links","href","Projects","Boolean","window","location","hostname","match","document","body","style","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iOAGe,SAASA,EAAUC,GAGhC,OACE,kBAAC,IAAD,CAAQC,MAAM,EAAMC,MAAO,IACzB,wBAAIC,UAAWH,EAAMI,QAASJ,EAAMK,SACpC,kBAAC,IAAOC,MAAR,CAAcC,GAAI,MAClB,kBAAC,IAAOC,UAAR,CAAkBC,MAAO,KACzB,kBAAC,IAAOH,MAAR,CAAcC,GAAI,O,YCNlBG,EAAYC,YAAW,CAC3BC,KAAM,CACJC,gBAAiB,WAEnBC,OAAO,CACLC,WAAY,MACZC,cAAe,OAEjBC,KAAM,SAAAjB,GAAK,MAAK,CACdkB,MAAO,QACPC,OAAQ,gBACRC,UAAW,OACXC,WAAY,aACZC,UAAW,SACXC,WAAY,MACZC,SAAU,OACVC,cAAe,YAEjBC,SAAU,CACRR,MAAO,UACPC,OAAQ,cACRC,UAAW,OACXC,WAAY,aACZC,UAAW,SACXC,WAAY,MACZC,SAAU,MACVC,cAAe,aA0BJE,EArBA,WACb,IAGMC,EAAUlB,IAChB,OACE,yBAAKP,UAAWyB,EAAQd,QACtB,wBAAIX,UAAWyB,EAAQX,MAAvB,cACA,kBAAClB,EAAD,CAAWM,QAPF,CAAC,oBAOgBD,OAAQwB,EAAQF,a,gBCvC1ChB,EAAYC,aAAW,SAACkB,GAAD,MAAY,CACrCC,IAAK,CACDX,OAAQ,OACRJ,WAAY,MACZC,cAAe,MACfe,eAAgB,SAChBC,WAAY,UAEhBC,MAAO,CACHZ,WAAY,aACZE,WAAY,SACZC,SAAU,MACVN,MAAO,UACPC,OAAQ,eAEZe,EAAG,CACCb,WAAY,aACZE,WAAY,SACZC,SAAU,QACVW,WAAY,OACZjB,MAAO,WAEXkB,IAAK,CACDL,eAAgB,SAChBC,WAAY,SACZK,SAAU,WACVC,SAAU,QAEdC,GAAI,CACAJ,WAAY,YA4BLK,EAxBC,WACZ,IAAMZ,EAAUlB,IAChB,OACI,kBAAC+B,EAAA,EAAD,CAAWH,SAAS,KAAKnC,UAAWyB,EAAQE,KAExC,kBAACY,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,yBAAK5C,UAAWyB,EAAQQ,IAAKY,IAAI,WAAWC,IAAI,aAEpD,kBAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,oCACI,wBAAI5C,UAAWyB,EAAQK,OAAvB,YACA,uBAAG9B,UAAWyB,EAAQM,GAAtB,2FACuF,wBAAI/B,UAAWyB,EAAQW,KAD9G,sEAEkE,wBAAIpC,UAAWyB,EAAQW,KAFzF,0GC7ClB7B,EAAYC,aAAW,SAACkB,GAAD,MAAY,CACrCC,IAAK,CACDX,OAAQ,gBACRJ,WAAY,MACZC,cAAe,MACfe,eAAgB,SAChBC,WAAY,UAEhBC,MAAO,CACHZ,WAAY,aACZE,WAAY,SACZC,SAAU,MACVN,MAAO,UACPC,OAAQ,eAEZ+B,aAAc,CACVnB,eAAgB,SAChBC,WAAY,UAEhBI,IAAK,CACDL,eAAgB,SAChBC,WAAY,SACZb,OAAQ,OACRkB,SAAU,WACVC,SAAU,QAEda,KAAM,CACFjC,MAAO,QACPC,OAAQ,OACRE,WAAY,aACZC,UAAW,SACXC,WAAY,MACZC,SAAU,MACVC,cAAe,eAmCR2B,EA/BD,WACV,IAAMxB,EAAUlB,IAChB,OACI,yBAAKP,UAAWyB,EAAQE,KACpB,wBAAI3B,UAAWyB,EAAQK,OAAvB,SACA,kBAACS,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAAIzC,UAAWyB,EAAQsB,cAC5C,kBAACR,EAAA,EAAD,CAAMG,MAAI,EAAC1C,UAAWyB,EAAQsB,cAC1B,uBAAG/C,UAAWyB,EAAQuB,KAAME,KAAK,uCAAsC,yBAAKlD,UAAWyB,EAAQQ,IAAKY,IAAI,eAAeC,IAAI,oBAD/H,IACuJ,6BACnJ,uBAAG9C,UAAWyB,EAAQuB,KAAME,KAAK,uCAAjC,aAEJ,kBAACX,EAAA,EAAD,CAAMG,MAAI,EAAC1C,UAAWyB,EAAQsB,cAC1B,uBAAG/C,UAAWyB,EAAQuB,KAAME,KAAK,gCAA+B,yBAAKlD,UAAWyB,EAAQQ,IAAKY,IAAI,aAAaC,IAAI,kBADtH,IAC4I,6BACxI,uBAAG9C,UAAWyB,EAAQuB,KAAME,KAAK,gCAAjC,WAEJ,kBAACX,EAAA,EAAD,CAAMG,MAAI,EAAC1C,UAAWyB,EAAQsB,cAC1B,uBAAGG,KAAK,sCAAsClD,UAAWyB,EAAQuB,MAAM,yBAAKhD,UAAWyB,EAAQQ,IAAKY,IAAI,YAAYC,IAAI,iBAD5H,IACiJ,6BAC7I,uBAAGI,KAAK,sCAAsClD,UAAWyB,EAAQuB,MAAjE,UAEJ,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAAC1C,UAAWyB,EAAQsB,cAC1B,uBAAG/C,UAAWyB,EAAQuB,KAAME,KAAK,oCAAmC,yBAAKlD,UAAWyB,EAAQQ,IAAKY,IAAI,gBAAgBC,IAAI,qBAD7H,IACsJ,6BAClJ,uBAAG9C,UAAWyB,EAAQuB,KAAME,KAAK,oCAAjC,cAEJ,kBAACX,EAAA,EAAD,CAAMG,MAAI,EAAC1C,UAAWyB,EAAQsB,cAC1B,uBAAG/C,UAAWyB,EAAQuB,KAAME,KAAK,8BAA6B,yBAAKlD,UAAWyB,EAAQQ,IAAKY,IAAI,aAAaC,IAAI,kBADpH,IAC0I,6BACtI,uBAAG9C,UAAWyB,EAAQuB,KAAME,KAAK,8BAAjC,cC7Dd3C,EAAYC,aAAW,SAACkB,GAAD,MAAY,CACrCC,IAAK,CACDX,OAAQ,OACRJ,WAAY,MACZC,cAAe,MACfe,eAAgB,SAChBC,WAAY,UAEhBC,MAAO,CACHZ,WAAY,aACZE,WAAY,SACZC,SAAU,MACVN,MAAO,UACPC,OAAQ,eAEZO,SAAU,CACNL,WAAY,aACZE,WAAY,SACZC,SAAU,QACVN,MAAO,UACPC,OAAQ,eAEZe,EAAG,CACCb,WAAY,aACZE,WAAY,SACZC,SAAU,QACVW,WAAY,OACZjB,MAAO,WAEXkB,IAAK,CACDL,eAAgB,SAChBC,WAAY,SACZK,SAAU,WACVC,SAAU,QAEdC,GAAI,CACAJ,WAAY,YAiBLmB,EAbE,WACb,IAAM1B,EAAUlB,IAChB,OACI,kBAAC+B,EAAA,EAAD,CAAWH,SAAS,KAAKnC,UAAWyB,EAAQE,KACxC,wBAAI3B,UAAWyB,EAAQK,OAAvB,YACA,uBAAG9B,UAAWyB,EAAQuB,KAAME,KAAK,2BAA0B,yBAAKlD,UAAWyB,EAAQQ,IAAKY,IAAI,uBAAuBC,IAAI,sBACvH,wBAAI9C,UAAWyB,EAAQF,UAAvB,oBACA,uBAAGvB,UAAWyB,EAAQM,GAAtB,wECxCQqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCFNC,SAASC,KAAKC,MAAQ,uBACtBC,IAASC,OACP,oCAEI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAGJJ,SAASK,eAAe,SDyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4749b654.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typing from 'react-typing-animation';\r\n\r\nexport default function TypingAni(props) {\r\n  const subtitles = [\"ui/ux designer\", \"full stack developer\", \"computer eng student\", \"hackathon aficionado\", \"robotics enthusiast\"]\r\n  const lengths = [14, 20, 20, 20, 19]\r\n  return (\r\n    <Typing loop={true} speed={30}>\r\n      <h3 className={props.format}>{props.content}</h3>\r\n      <Typing.Delay ms={2000} />\r\n      <Typing.Backspace count={16} />\r\n      <Typing.Delay ms={500} />\r\n    </Typing>\r\n  )\r\n}","import React from 'react';\r\nimport TypingAni from './TypingAni';\r\n// import dimensions from './dimensions'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#121212'\r\n  },\r\n  header:{\r\n    paddingTop: '15%',\r\n    paddingBottom: '15%'\r\n  },\r\n  name: props => ({\r\n    color: 'white',\r\n    margin: '0% 0% 0% 0.1%',\r\n    textAlign: 'left',\r\n    fontFamily: 'Montserrat',\r\n    fontStyle: 'normal',\r\n    fontWeight: '600',\r\n    fontSize: '14vw',\r\n    letterSpacing: '0.151em',\r\n  }),\r\n  subtitle: {\r\n    color: '#A698C5',\r\n    margin: '0% 0% 0% 1%',\r\n    textAlign: 'left',\r\n    fontFamily: 'Montserrat',\r\n    fontStyle: 'normal',\r\n    fontWeight: '600',\r\n    fontSize: '5vw',\r\n    letterSpacing: '0.151em',\r\n  }\r\n});\r\n\r\n\r\nconst Header = () => {\r\n  const cont = [\"work in progress\"]\r\n  // let [heightPadding, setHeightPadding] = React.useState(0);\r\n  // setHeightPadding(dimensions());\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.header}>\r\n      <h1 className={classes.name}>denny lee.</h1>\r\n      <TypingAni content={cont} format={classes.subtitle} />\r\n      \r\n      {/* <div className=\"small-spacer\" />\r\n      <div>\r\n        <a className={classes.link} href=\"https://www.linkedin.com/in/dlee14/\">linkedin</a>\r\n        <a className={classes.link} href=\"https://github.com/denlee973\">github</a>\r\n        <a className={classes.link} href=\"https://www.instagram.com/_dn.y/\">instagram</a>\r\n        <a className={classes.link} href=\"https://drive.google.com/file/d/16C4aYr-hKllCyNdw0fx26FanR59WKmQw/view?usp=sharing\">resume</a>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pad: {\r\n        margin: 'auto',\r\n        paddingTop: '15%',\r\n        paddingBottom: '15%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontFamily: 'Montserrat',\r\n        fontWeight: 'normal',\r\n        fontSize: '4vw',\r\n        color: '#FFFFFF',\r\n        margin: '0% 0% 0% 0%'\r\n    },\r\n    p: {\r\n        fontFamily: 'Montserrat',\r\n        fontWeight: 'normal',\r\n        fontSize: '1.5vw',\r\n        lineHeight: '110%',\r\n        color: '#FFFFFF'\r\n    },\r\n    img: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        maxWidth: '100%'\r\n    },\r\n    br: {\r\n        lineHeight: '10px'\r\n    }\r\n}));\r\n\r\nconst AboutMe = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.pad}>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <img className={classes.img} src=\"face.png\" alt=\"my face\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <>\r\n                        <h4 className={classes.title}>about me</h4>\r\n                        <p className={classes.p}>\r\n                            hey there! I’m denny, a computer engineering student at the univeristy of waterloo.<br className={classes.br}/>\r\n                            so far, I’ve worked at scotiabank for 8 months as a developer.<br className={classes.br}/>\r\n                            aside from tech, you can find me singing with the water boys and catching up on the latest anime.\r\n                        </p>\r\n                    </>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pad: {\r\n        margin: '0% 15% 0% 15%',\r\n        paddingTop: '15%',\r\n        paddingBottom: '15%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontFamily: 'Montserrat',\r\n        fontWeight: 'normal',\r\n        fontSize: '4vw',\r\n        color: '#FFFFFF',\r\n        margin: '0% 0% 3% 0%'\r\n    },\r\n    gridCentered: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    img: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: 'auto',\r\n        position: 'relative',\r\n        maxWidth: '100%'\r\n    },\r\n    link: {\r\n        color: 'white',\r\n        margin: 'auto',\r\n        fontFamily: 'Montserrat',\r\n        fontStyle: 'normal',\r\n        fontWeight: '300',\r\n        fontSize: '2vw',\r\n        letterSpacing: '0.151em'\r\n    }\r\n}));\r\n\r\nconst Links = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.pad}>\r\n            <h4 className={classes.title}>links</h4>\r\n            <Grid container spacing={10} className={classes.gridCentered} >\r\n                <Grid item className={classes.gridCentered}>\r\n                    <a className={classes.link} href='https://www.linkedin.com/in/dlee14/'><img className={classes.img} src=\"linkedin.png\" alt=\"linkedinButton\" /></a> <br />\r\n                    <a className={classes.link} href='https://www.linkedin.com/in/dlee14/'>linkedin</a>\r\n                </Grid>\r\n                <Grid item className={classes.gridCentered}>\r\n                    <a className={classes.link} href=\"https://github.com/denlee973\"><img className={classes.img} src=\"github.png\" alt=\"githubButton\" /></a> <br />\r\n                    <a className={classes.link} href=\"https://github.com/denlee973\">github</a>\r\n                </Grid>\r\n                <Grid item className={classes.gridCentered}>\r\n                    <a href='https://www.linkedin.com/in/dlee14/' className={classes.link}><img className={classes.img} src=\"figma.png\" alt=\"figmaButton\" /></a> <br />\r\n                    <a href='https://www.linkedin.com/in/dlee14/' className={classes.link}>figma</a>\r\n                </Grid>\r\n                <Grid item className={classes.gridCentered}>\r\n                    <a className={classes.link} href=\"https://www.instagram.com/_dn.y/\"><img className={classes.img} src=\"instagram.png\" alt=\"instagramButton\" /></a> <br />\r\n                    <a className={classes.link} href=\"https://www.instagram.com/_dn.y/\">instagram</a>\r\n                </Grid>\r\n                <Grid item className={classes.gridCentered}>\r\n                    <a className={classes.link} href=\"Denny Lee - Resume S21.pdf\"><img className={classes.img} src=\"resume.png\" alt=\"resumeButton\" /></a> <br />\r\n                    <a className={classes.link} href=\"Denny Lee - Resume S21.pdf\">resume</a>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Links;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pad: {\r\n        margin: 'auto',\r\n        paddingTop: '15%',\r\n        paddingBottom: '15%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontFamily: 'Montserrat',\r\n        fontWeight: 'normal',\r\n        fontSize: '4vw',\r\n        color: '#FFFFFF',\r\n        margin: '0% 0% 3% 0%'\r\n    },\r\n    subtitle: {\r\n        fontFamily: 'Montserrat',\r\n        fontWeight: 'normal',\r\n        fontSize: '1.8vw',\r\n        color: '#FFFFFF',\r\n        margin: '2% 0% 0% 0%'\r\n    },\r\n    p: {\r\n        fontFamily: 'Montserrat',\r\n        fontWeight: 'normal',\r\n        fontSize: '1.5vw',\r\n        lineHeight: '110%',\r\n        color: '#FFFFFF'\r\n    },\r\n    img: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        maxWidth: '100%'\r\n    },\r\n    br: {\r\n        lineHeight: '10px'\r\n    }\r\n}));\r\n\r\nconst Projects = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.pad}>\r\n            <h4 className={classes.title}>projects</h4>\r\n            <a className={classes.link} href='https://www.dennylee.ca'><img className={classes.img} src=\"personal website.png\" alt=\"personal website\" /></a>\r\n            <h6 className={classes.subtitle}>personal website</h6>\r\n            <p className={classes.p}>built using react. designed using figma. inspired by gmk oblivion.</p>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Projects;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from './header';\r\nimport AboutMe from './aboutme';\r\nimport Links from './links';\r\nimport Projects from './projects';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import ThemeProvider from '@material-ui/core/ThemeProvider';\r\n// import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\n\r\n// let theme = createMuiTheme({\r\n//   typography: {\r\n\r\n//   },\r\n// });\r\n// theme = responsiveFontSizes(theme);\r\ndocument.body.style = 'background: #121212;';\r\nReactDOM.render(\r\n  <>\r\n    {/* <ThemeProvider theme={theme}> */}\r\n      <Header />\r\n      <AboutMe />\r\n      <Links />\r\n      <Projects />\r\n    {/* </ThemeProvider> */}\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}